generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  userId    Int     @id @default(autoincrement())
  firstName String?
  lastName  String?
  email     String  @unique
  password  String
  Cart      Cart[]
  Token     Token?
}

model Token {
  tokenId      Int    @id @default(autoincrement())
  refreshToken String @unique
  userId       Int    @unique
  userIdF      User   @relation(fields: [userId], references: [userId])
}

model Cart {
  cartId   Int              @id @default(autoincrement())
  userId   Int?
  User     User?            @relation(fields: [userId], references: [userId])
  products ProductsInCart[]
}

model Product {
  productId       Int              @id @default(autoincrement())
  itemName        String
  price           Float
  discountedPrice Float
  rating          Int
  frontImageUrl   String
  extraImageUrls  String[]
  bannerImageUrls String[]
  isAvailable     Boolean
  cart            ProductsInCart[]
}

model ProductsInCart {
  cartId    Int
  productId Int
  cart      Cart    @relation(fields: [cartId], references: [cartId])
  product   Product @relation(fields: [productId], references: [productId])

  @@id([productId, cartId])
}

model Collection {
  collectionId Int                     @id @default(autoincrement())
  name         String
  isStyle      Boolean
  imageUrl     String
  products     CollectionsOfProducts[]
}

model CollectionsOfProducts {
  collectionId Int
  relationId   Int        @id @default(autoincrement())
  productId    Int[]
  collections  Collection @relation(fields: [collectionId], references: [collectionId])
}

model SubscribptionEmailList {
  id    Int    @id @default(autoincrement())
  email String
}
