### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Collection {
  collectionId: Int
  imageUrl: String
  isStyle: Boolean
  name: String
}

type CollectionOfProducts {
  collectionId: Int
  productId: [Int!]
}

type Mutation {
  CreateUser(email: String!, firstName: String!, lastName: String!, password: String!): User
}

type PastOrders {
  createdAt: String
  orderId: Int
  productList: [Int]
  quantity: [Int]
  userId: Int
}

type Product {
  bannerImageUrls: [String]
  discountedPrice: Float
  extraImageUrls: [String]
  frontImageUrl: String
  isAvailable: Boolean
  itemName: String
  price: Float
  productId: Int
  rating: Int
}

type ProviderPastOrders {
  createdAt: String
  orderId: Int
  productList: [Int]
  quantity: [Int]
  userId: Int
}

type Query {
  CollectionsList(condition: Boolean!): [Collection!]
  GetUserInfoByEmail(email: String!): User!
  PastOrdersQuery(userId: Int!): [PastOrders!]
  ProductById(id: Int!): Product
  ProductsByCollectionId(collectionId: Int!): [Product]
  ProductsByMultipleIds(id: [Int]!): [Product]
  ProductsList: [Product!]
  ProviderPastOrdersQuery(providerId: Int!): [ProviderPastOrders!]
  SpecificCollectionQuery(collectionId: Int!): [CollectionOfProducts]!
}

type User {
  email: String
  firstName: String
  lastName: String
  password: String
  userId: Int
}